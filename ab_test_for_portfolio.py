{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":268098,"sourceType":"datasetVersion","datasetId":112091}],"dockerImageVersionId":30635,"isInternetEnabled":false,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [markdown]\n# \n# \n# На сайте проведён AB тест.  \n# Нужно проанализировать конверсию, полученую в следствии изменения. Показатель, на который мы будем смотреть - это количество кликов по кнопке \"Изучить курсы\" на домашней странице. \n# Показатель кликабельности определяется как количество кликов, деленное на количество просмотров.\n# \n# Измеряемая метрика:   \n# CR: # клики уникальными пользователями / # просмотры уникальными пользователями\n# \n# Нулевая гипотеза:   \n# Изменение конверсии не произошло.\n# H0: CR_espirement ≤ CR_control\n# \n# Альтернативная гипотеза:  \n# Данные контрольной и экспериментальной группы статистически различны.\n# H1: CR_espirement ≤ CR_control\n# \n# Альтернативная гипотеза - это то, что мы хотим доказать, в данном случае, что новый дизайн домашней страницы имеет более высокий показатель кликов, чем старый дизайн домашней страницы.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:58.314757Z\",\"iopub.execute_input\":\"2024-02-05T19:07:58.315031Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.775598Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:58.315007Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.774390Z\"}}\nimport pandas as pd\nfrom statsmodels.stats.proportion import proportions_ztest\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# %% [markdown]\n# Посмотрим как выглядят данные:\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.777358Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.778080Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.832233Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.778039Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.831563Z\"}}\ndf = pd.read_csv('/kaggle/input/audacity-ab-testing/homepage_actions.csv')\ndf.head()\n\n# %% [markdown]\n# Проведём некоторые преобразования.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.835133Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.835452Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.858604Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.835426Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.857691Z\"}}\ndf = df.rename(columns={'id':'user_id'})            # переименуем столбец для удобства\ndf['timestamp'] = pd.to_datetime(df['timestamp'])   # преобразуем формат для даты\ndf['timestamp'].max() - df['timestamp'].min()       # найдём количество дней от начальной до конечной даты\n\n# %% [markdown]\n# Эксперимент длился 115 дней.\n\n# %% [markdown]\n# Для чистоты теста проверим уникальность пользователей, user_id не должен повторяться для действия \"view\".\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.860891Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.861849Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.887980Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.861814Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.887211Z\"}}\na = df['user_id'].value_counts().to_frame()    # user_id повторяется максимум 2 раза\nb = a.query('count > 1')                       # список user_id, которые встречаются больше 1 раза\nrslt = df[df['user_id'].isin(b.index)]\nrslt.shape\nrslt = rslt.groupby(['group', 'action'])['action'].agg('count')\nprint(rslt)      # сгрупированная таблица для повторяющихся user_id\n\n# %% [markdown]\n# user_id повторяется только в случае если было действие 'click'.   \n# Значит user_id - уникальны.\n\n# %% [markdown]\n# Группируем данные по group(группа) и action(действию).\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.888916Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.889785Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.901194Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.889760Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.900231Z\"}}\ndf2 = df.groupby(['group', 'action'])['action'].agg('count')\ndf2\n\n# %% [markdown]\n# Из полученной таблицы можно найти конверсию.   \n# CR = #клики уникальными пользователями / #просмотры уникальными пользователями\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.902604Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.902974Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.928324Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.902939Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.927513Z\"}}\n# зададим переменные для расчётов\ncontrol_view = df.query(\"action == 'view' and group == 'control'\")['action'].count()\ncontrol_click = df.query(\"action == 'click' and group == 'control'\")['action'].count()\nexperiment_view = df.query(\"action == 'view' and group == 'experiment'\")['action'].count()\nexperiment_click = df.query(\"action == 'click' and group == 'experiment'\")['action'].count()\n# посчитаем конверсию для двух групп\ncr_control = round(control_click / control_view, 4)\ncr_expirement = round(experiment_click / experiment_view, 4)\nprint(\"conversion control = \", cr_control, \"conversion expirement = \", cr_expirement)\n# оценим результат\nres = round((cr_expirement* 100 / cr_control) - 100, 1)\nprint (res, '%')\n\n# %% [markdown]\n# Конверсия в экспериментальной группе выше на 10,7 %.\n\n# %% [markdown]\n# Проверим на сколько статистически значемые результаты получились при помощи z-теста.\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2024-02-05T19:07:59.929367Z\",\"iopub.execute_input\":\"2024-02-05T19:07:59.930621Z\",\"iopub.status.idle\":\"2024-02-05T19:07:59.940142Z\",\"shell.execute_reply.started\":\"2024-02-05T19:07:59.930569Z\",\"shell.execute_reply\":\"2024-02-05T19:07:59.939208Z\"}}\nz, p_value = proportions_ztest([control_click, experiment_click], [control_view, experiment_view])\nround(p_value, 5)\n\n# %% [markdown]\n# p_value = 0,00883 меньше 0,05 - отвергаем нулевую гипотезу. Данные контрольной и экспериментальной группы статистически различны.   \n# Рекумендуется ввести изменения для всех пользователей.","metadata":{"_uuid":"c7ef1d2b-30b0-4e4d-895c-2ea757a3fd9c","_cell_guid":"17de0439-7d5e-4620-bf7a-df368908d31d","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}